#!/usr/bin/env ruby

require 'camtool.rb'
require 'rgl/dot'
require 'rgl/topsort'
require 'rgl/transitivity'

instruction = ARGV[0]
target = ARGV[1]

if instruction == '--version' || instruction == '-v'
   CamTool.version
elsif instruction == '--info'
  print CamTool::ProvJSONtoRGL.new.read_log_file(target).information
  CamTool::EdgeCounter.new.read_log_file(target).show
  CamTool::VertexCounter.new.read_log_file(target).show
elsif instruction == '--publish'
  CamTool::MQTTBreaker.new.break_log_file target
elsif instruction == '--break'
  CamTool::LogBreaker.new.break_log_file target
elsif instruction == '--validate'
  CamTool::ProvJSONtoRGL.new.read_log_file(target).validate
  puts 'Graph structure verified.'
  CamTool::EdgeValidator.new.read_log_file(target)
  puts 'Relations verified.'
  CamTool::NodePresenceValidator.new.read_log_file(target).validate
  puts 'Nodes presence verified.'
elsif instruction == '--packet'
  CamTool::CheckPacket.new.read_log_file(target)
elsif instruction == '--png'
  print CamTool::ProvJSONtoRGL.new.read_log_file(target).png
elsif instruction == '--list'
    types = ARGV[2]
    CamTool::ProvJSONtoRGL.new.read_log_file(target).list(types)
else
  puts '--version'
  puts '--info <path to log file>'
  puts '--publish <path to log file>'
  puts '--break <path to log file>'
  puts '--png <path to log file>'
  puts '--packet <path to log file>'
  puts '--validate <path to log file>'
  puts '--list <path to log file> [optional comma-separated list of element type e.g. "path,argv"]'
end
